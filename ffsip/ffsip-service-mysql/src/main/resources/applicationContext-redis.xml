<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c" xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- #################################################################### -->
    <!-- # Jedis 连接池配置 -->
    <!-- #################################################################### -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="minIdle">
            <value>${redis.pool.minIdle}</value>
        </property>
        <property name="maxIdle">
            <value>${redis.pool.maxIdle}</value>
        </property>
        <property name="maxWaitMillis">
            <value>${redis.pool.maxWaitMillis}</value>
        </property>
        <property name="testOnBorrow">
            <value>${redis.pool.testOnBorrow}</value>
        </property>
        <property name="testOnReturn">
            <value>${redis.pool.testOnReturn}</value>
        </property>
        <property name="testWhileIdle">
            <value>${redis.pool.testWhileIdle}</value>
        </property>
    </bean>

    <!-- #################################################################### -->
    <!-- # Jedis 连接工厂 -->
    <!-- #################################################################### -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <constructor-arg index="0">
            <bean class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
                <property name="master">
                    <bean class="org.springframework.data.redis.connection.RedisNode" p:name="${redis.master.name}"
                          c:host="${redis.master.host}" c:port="${redis.master.port}"/>
                </property>
                <property name="sentinels">
                    <set>
                        <bean class="org.springframework.data.redis.connection.RedisNode"
                              c:host="${redis.sentinels.n1.host}" c:port="${redis.sentinels.n1.port}"/>
                    </set>
                </property>
            </bean>
        </constructor-arg>
        <constructor-arg index="1">
            <ref bean="jedisPoolConfig"/>
        </constructor-arg>
        <property name="timeout">
            <value>${redis.timeout}</value>
        </property>
        <property name="password">
            <value>${redis.password}</value>
        </property>
    </bean>

    <!-- #################################################################### -->
    <!-- # Jedis 模板 -->
    <!-- #################################################################### -->
    <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
    <bean id="hessian2RedisSerializer" class="com.ffzx.commerce.framework.utils.Hessian2SerializationRedisSerializer"/>
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory">
            <ref bean="jedisConnectionFactory"/>
        </property>
        <property name="keySerializer">
            <ref bean="stringRedisSerializer"/>
        </property>
        <property name="hashKeySerializer">
            <ref bean="stringRedisSerializer"/>
        </property>
        <property name="defaultSerializer">
            <ref bean="hessian2RedisSerializer"/>
        </property>
    </bean>

</beans>